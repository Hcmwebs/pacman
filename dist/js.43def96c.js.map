{"version":3,"sources":["js/setup.js","js/ghostsMoves.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/defineProperty.js","js/GameBoard.js","js/Pacman.js","js/Ghost.js","js/index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PELLET","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","randomMovement","position","direction","objectExists","dir","nextMovePos","keys","Object","key","Math","floor","random","length","GameBoard","DOMGrid","pos","object","grid","classList","contains","dotCount","gameWin","div","document","createElement","add","innerHTML","appendChild","level","style","cssText","forEach","square","i","push","classes","remove","deg","transform","character","shouldMove","getNextMove","makeMove","classesToRemove","classesToAdd","rotateDiv","removeObject","addObject","setNewPos","board","createGrid","Pacman","speed","startPos","timer","powerPellet","e","keyCode","Ghost","name","isScared","ObjectExists","gameGrid","querySelector","scoreTable","startButton","POWER_PELLET_TIME","GLOBAL_SPEED","gameBoard","createGameBoard","playAudio","audio","Audio","play","gameOver","pacman","soundGameOver","removeEventListener","handleKeyInput","showGameStatus","clearInterval","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","score","gameLoop","moveCharacter","soundDot","soundPellet","clearTimeout","powerPelletTimer","setTimeout","powerPelletActive","startGame","soundGameStart","addEventListener","setInterval"],"mappings":";AAuDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EAvDA,IAAMA,EAAY,GAuDlB,QAAA,UAAA,EAtDA,IAAMC,EAAY,GAsDlB,QAAA,UAAA,EArDA,IAAMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAkCP,QAAA,WAAA,EA9BA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAkBN,QAAA,YAAA,EAdA,IAAMC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,OACZR,EAAYS,OACZT,EAAYY,WAIP,QAAA,WAAA,EAAA,IAAME,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"js.43def96c.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180,\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270,\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0,\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90,\n  },\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PELLET: 'pellet',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair',\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PELLET,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR,\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1,\n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","import { DIRECTIONS, OBJECT_TYPE } from './setup';\n\n// Primitive random movement\nexport function randomMovement(position, direction, objectExists) {\n  let dir = direction;\n  let nextMovePos = position + dir.movement;\n\n  //Create an array from the directions object keys\n  const keys = Object.keys(DIRECTIONS);\n\n  while (\n    objectExists(nextMovePos, OBJECT_TYPE.WALL) ||\n    objectExists(nextMovePos, OBJECT_TYPE.GHOST)\n  ) {\n    // Get  a random key from the key array\n\n    const key = keys[Math.floor(Math.random() * keys.length)];\n\n    //Set the next move\n\n    dir = DIRECTIONS[key];\n    //Set the nextMove\n    nextMovePos = position + dir.movement;\n  }\n  return { nextMovePos, direction: dir };\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\n\nclass GameBoard {\n  constructor(DOMGrid) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid = DOMGrid;\n  }\n\n  showGameStatus(gameWin) {\n    const div = document.createElement('div');\n    div.classList.add('game-status');\n    div.innerHTML = `${gameWin ? 'WIN' : 'GAME OVER!'}`;\n    this.DOMGrid.appendChild(div);\n  }\n\n  createGrid(level) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid.innerHTML = '';\n    this.DOMGrid.style.cssText = `grid-template-columns : repeat(${GRID_SIZE}, ${CELL_SIZE}px)`;\n\n    level.forEach((square, i) => {\n      const div = document.createElement('div');\n      div.classList.add('square', CLASS_LIST[square]);\n      div.style.cssText = `width : ${CELL_SIZE}px; height : ${CELL_SIZE}px;`;\n      this.DOMGrid.appendChild(div);\n      this.grid.push(div);\n\n      if (CLASS_LIST[square] === OBJECT_TYPE.DOT) {\n        this.dotCount++;\n      }\n    });\n  }\n\n  addObject(pos, classes) {\n    this.grid[pos].classList.add(...classes);\n  }\n\n  removeObject(pos, classes) {\n    this.grid[pos].classList.remove(...classes);\n  }\n\n  objectExists = (pos, object) => {\n    return this.grid[pos].classList.contains(object);\n  };\n\n  rotateDiv(pos, deg) {\n    this.grid[pos].style.transform = `rotate(${deg}deg)`;\n  }\n\n  moveCharacter(character) {\n    if (character.shouldMove()) {\n      const { nextMovePos, direction } = character.getNextMove(\n        this.objectExists\n      );\n      const { classesToRemove, classesToAdd } = character.makeMove();\n\n      if (character.rotation && nextMovePos !== character.pos) {\n        this.rotateDiv(nextMovePos, character.dir.rotation);\n        this.rotateDiv(character.pos, 0);\n      }\n\n      this.removeObject(character.pos, classesToRemove);\n      this.addObject(nextMovePos, classesToAdd);\n\n      character.setNewPos(nextMovePos, direction);\n    }\n  }\n\n  static createGameBoard(DOMGrid, level) {\n    const board = new this(DOMGrid);\n    board.createGrid(level);\n    return board;\n  }\n}\n\nexport default GameBoard;\n","import { OBJECT_TYPE, DIRECTIONS } from './setup';\n\nclass Pacman {\n  constructor(speed, startPos) {\n    this.pos = startPos;\n    this.speed = speed;\n    this.dir = null;\n    this.timer = 0;\n    this.powerPellet = false;\n    this.rotation = true;\n  }\n\n  shouldMove() {\n    if (!this.dir) return false;\n\n    if (this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n    this.timer++;\n  }\n\n  getNextMove(objectExists) {\n    let nextMovePos = this.pos + this.dir.movement;\n\n    if (\n      objectExists(nextMovePos, OBJECT_TYPE.WALL) ||\n      objectExists(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n    ) {\n      nextMovePos = this.pos;\n    }\n\n    return { nextMovePos, direction: this.dir };\n  }\n\n  makeMove() {\n    const classesToRemove = [OBJECT_TYPE.PACMAN];\n    const classesToAdd = [OBJECT_TYPE.PACMAN];\n\n    return { classesToRemove, classesToAdd };\n  }\n\n  setNewPos(nextMovePos) {\n    this.pos = nextMovePos;\n  }\n\n  handleKeyInput(e, objectExists) {\n    let dir;\n\n    if (e.keyCode >= 37 && e.keyCode <= 40) {\n      dir = DIRECTIONS[e.key];\n    } else {\n      return;\n    }\n\n    const nextMovePos = this.pos + dir.movement;\n    if (\n      objectExists(nextMovePos, OBJECT_TYPE.WALL) ||\n      objectExists(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n    )\n      return;\n    this.dir = dir;\n  }\n}\n\nexport default Pacman;\n","import { DIRECTIONS, OBJECT_TYPE } from './setup';\n\nclass Ghost {\n  constructor(speed = 5, startPos, movement, name) {\n    this.name = name;\n    this.movement = movement;\n    this.startPos = startPos;\n    this.pos = startPos;\n    this.dir = DIRECTIONS.ArrowRight;\n    this.speed = speed;\n    this.timer = 0;\n    this.isScared = false;\n    this.rotation = false;\n  }\n\n  shouldMove() {\n    if (this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n    this.timer++;\n    return false;\n  }\n\n  getNextMove(ObjectExists) {\n    const { nextMovePos, direction } = this.movement(\n      this.pos,\n      this.dir,\n      ObjectExists\n    );\n    return { nextMovePos, direction };\n  }\n\n  makeMove() {\n    const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\n    let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\n\n    if (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\n    return { classesToRemove, classesToAdd };\n  }\n\n  setNewPos(nextMovePos, direction) {\n    this.pos = nextMovePos;\n    this.dir = direction;\n  }\n}\n\nexport default Ghost;\n","import { LEVEL, OBJECT_TYPE } from './setup';\nimport { randomMovement } from './ghostsMoves';\n\n//classes\nimport GameBoard from './GameBoard'; //GameBoard\nimport Pacman from './Pacman'; //pacman\nimport Ghost from './Ghost'; // ghosts\n\n//sounds\nimport soundDot from '/sounds/munch.wav';\nimport soundPellet from '/sounds/pill.wav';\nimport soundGameStart from '/sounds/game_start.wav';\nimport soundGameOver from '/sounds/death.wav';\nimport soundGhost from '/sounds/eat_ghost.wav';\n\n//DOM Elements\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\n\n//Game Constants\nconst POWER_PELLET_TIME = 10000; //ms\nconst GLOBAL_SPEED = 80; //ms\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\n\n//functions\n\n//Audio\nconst playAudio = audio => {\n  const soundEffect = new Audio(audio);\n  soundEffect.play();\n};\n\nconst gameOver = (pacman, grid) => {\n  playAudio(soundGameOver);\n\n  document.removeEventListener('keydown', e =>\n    pacman.handleKeyInput(e, gameBoard.objectExists)\n  );\n\n  gameBoard.showGameStatus(gameWin);\n\n  clearInterval(timer);\n\n  startButton.classList.remove('hide');\n};\nconst checkCollision = (pacman, ghosts) => {\n  const collidedGhost = ghosts.find(ghost => pacman.pos === ghost.pos);\n\n  if (collidedGhost) {\n    //Pacman eats ghost\n    if (pacman.powerPellet) {\n      playAudio(soundGhost);\n\n      ghosts.forEach((ghost, i) => {\n        if (collidedGhost.name === ghost.name) {\n          gameBoard.removeObject(ghost.pos, [\n            OBJECT_TYPE.GHOST,\n            OBJECT_TYPE.SCARED,\n            ghost.name,\n          ]);\n\n          //Reset the ghost to the start position\n\n          ghost.pos = ghost.startPos;\n        }\n      });\n      score += 100;\n    } else {\n      gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n      gameBoard.rotateDiv(pacman.pos, 0);\n      gameOver(pacman, gameGrid);\n    }\n  }\n};\nconst gameLoop = (pacman, ghosts) => {\n  gameBoard.moveCharacter(pacman);\n  checkCollision(pacman, ghosts);\n\n  ghosts.forEach(ghost => gameBoard.moveCharacter(ghost));\n  checkCollision(pacman, ghosts);\n\n  // Check if Pacman eats a dot\n\n  if (gameBoard.objectExists(pacman.pos, OBJECT_TYPE.DOT)) {\n    playAudio(soundDot);\n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n    gameBoard.dotCount--;\n    score += 10;\n  }\n\n  //check if Pacman eats a powerpellet\n\n  if (gameBoard.objectExists(pacman.pos, OBJECT_TYPE.PELLET)) {\n    playAudio(soundPellet);\n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PELLET]);\n\n    pacman.powerPellet = true;\n    score += 50;\n\n    clearTimeout(powerPelletTimer);\n    powerPelletTimer = setTimeout(\n      () => (pacman.powerPellet = false),\n      POWER_PELLET_TIME\n    );\n  }\n\n  // Change ghost to scare mode  depending on Powerpellet\n\n  if (pacman.powerPellet != powerPelletActive) {\n    powerPelletActive = pacman.powerPellet;\n    ghosts.forEach(ghost => (ghost.isScared = pacman.powerPellet));\n  }\n\n  //Check if all the dots have been eaten\n\n  if (gameBoard.dotCount === 0) {\n    gameWin = true;\n    gameOver(pacman, ghosts);\n  }\n\n  // Show the score\n  scoreTable.innerHTML = score;\n};\n\nconst startGame = () => {\n  playAudio(soundGameStart);\n  gameWin = false;\n  powerPelletActive = false;\n  score = 0;\n\n  startButton.classList.add('hide');\n\n  gameBoard.createGrid(LEVEL);\n\n  const pacman = new Pacman(2, 287);\n  gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n  document.addEventListener('keydown', e =>\n    pacman.handleKeyInput(e, gameBoard.objectExists)\n  );\n\n  const ghosts = [\n    new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n    new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n    new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n    new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE),\n  ];\n\n  timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n};\n\n//Initial setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPelletActive = false;\nlet powerPelletTimer = null;\n\n//start the game\n\nstartButton.addEventListener('click', startGame);\n"]}